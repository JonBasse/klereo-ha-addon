#!/usr/bin/bash

# Load configuration from Home Assistant
CONFIG_PATH="/data/options.json"

if [ ! -f "$CONFIG_PATH" ]; then
    echo "ERROR: Configuration file not found at $CONFIG_PATH"
    exit 1
fi

# Parse configuration using jq
klereo_username=$(jq -r '.klereo_username // empty' "$CONFIG_PATH")
klereo_password=$(jq -r '.klereo_password // empty' "$CONFIG_PATH")
update_interval=$(jq -r '.update_interval // 600' "$CONFIG_PATH")
log_level=$(jq -r '.log_level // "info"' "$CONFIG_PATH")
homeassistant_url=$(jq -r '.homeassistant_url // "http://supervisor/core"' "$CONFIG_PATH")
homeassistant_token=$(jq -r '.homeassistant_token // empty' "$CONFIG_PATH")

# Export configuration as environment variables
export KLEREO_USERNAME="${klereo_username}"
export KLEREO_PASSWORD="${klereo_password}"
export UPDATE_INTERVAL="${update_interval}"
export LOG_LEVEL="${log_level^^}"
export HOMEASSISTANT_URL="${homeassistant_url}"
export HOMEASSISTANT_TOKEN="${homeassistant_token}"

# Log startup information
echo "$(date): Starting Klereo Pool Manager Add-on..."
echo "$(date): Log level: ${log_level}"
echo "$(date): Update interval: ${update_interval}s"
echo "$(date): Home Assistant URL: ${homeassistant_url}"

# Validate configuration
if [ -z "${klereo_username}" ]; then
    echo "$(date): ERROR: Klereo username is required!"
    exit 1
fi

if [ -z "${klereo_password}" ]; then
    echo "$(date): ERROR: Klereo password is required!"
    exit 1
fi

# Change to working directory
cd /usr/bin || exit 1

# Start the application
echo "$(date): Starting Klereo Pool Manager service..."
exec python3 /usr/bin/klereo